#include <iostream>
#include <iomanip>
#include <vector>
#include <string>
#include <chrono>
#include <random>
#include <thread>
#include <mutex>
#include <memory>
#include <limits>
#include <complex>
#include <iterator>

#include "seal/seal.h"

///My header file =>
#include "Document/documentToPolynolomial.h"

using namespace std;
using namespace seal;

///my functions:
vector<Plaintext> subpolyes_string_to_plaintext(vector<string> &temp){
	vector<Plaintext> plaintexts;
	for(int i=0; i<temp.size(); i++){
		cout<<temp[i]<<endl;
		plaintexts.push_back((Plaintext)temp[i]);
	}
	return plaintexts;
}
///My function finished.




void print_example_banner(string title)
{
    if (!title.empty())
    {
        size_t title_length = title.length();
        size_t banner_length = title_length + 2 + 2 * 10;
        string banner_top(banner_length, '*');
        string banner_middle = string(10, '*') + " " + title + " " + string(10, '*');

        cout << endl
            << banner_top << endl
            << banner_middle << endl
            << banner_top << endl
            << endl;
    }
}

void print_parameters(const shared_ptr<SEALContext> &context)
{
    auto &context_data = *context->context_data();

    /*
    Which scheme are we using?
    */
    string scheme_name;
    switch (context_data.parms().scheme())
    {
    case scheme_type::BFV:
        scheme_name = "BFV";
        break;
    case scheme_type::CKKS:
        scheme_name = "CKKS";
        break;
    default:
        throw invalid_argument("unsupported scheme");
    }

    cout << "/ Encryption parameters:" << endl;
    cout << "| scheme: " << scheme_name << endl;
    cout << "| poly_modulus_degree: " <<
        context_data.parms().poly_modulus_degree() << endl;

    /*
    Print the size of the true (product) coefficient modulus.
    */
    cout << "| coeff_modulus size: " << context_data.
        total_coeff_modulus().significant_bit_count() << " bits" << endl;

    /*
    For the BFV scheme print the plain_modulus parameter.
    */
    if (context_data.parms().scheme() == scheme_type::BFV)
    {
        cout << "| plain_modulus: " << context_data.
            parms().plain_modulus().value() << endl;
    }

    cout << "\\ noise_standard_deviation: " << context_data.
        parms().noise_standard_deviation() << endl;
    cout << endl;
}

template<typename T>
void print_vector(vector<T> vec, size_t print_size = 4, int prec = 3)
{
    /*
    Save the formatting information for std::cout.
    */
    ios old_fmt(nullptr);
    old_fmt.copyfmt(cout);

    size_t slot_count = vec.size();

    cout << fixed << setprecision(prec) << endl;
    if(slot_count <= 2 * print_size)
    {
        cout << "    [";
        for (size_t i = 0; i < slot_count; i++)
        {
            cout << " " << vec[i] << ((i != slot_count - 1) ? "," : " ]\n");
        }
    }
    else
    {
        vec.resize(max(vec.size(), 2 * print_size));
        cout << "    [";
        for (size_t i = 0; i < print_size; i++)
        {
            cout << " " << vec[i] << ",";
        }
        if(vec.size() > 2 * print_size)
        {
            cout << " ...,";
        }
        for (size_t i = slot_count - print_size; i < slot_count; i++)
        {
            cout << " " << vec[i] << ((i != slot_count - 1) ? "," : " ]\n");
        }
    }
    cout << endl;

    /*
    Restore the old std::cout formatting.
    */
    cout.copyfmt(old_fmt);
}


int main()
{
	///freopen("out2.txt","w",stdout);
	print_example_banner("Privacy Preserving Plagiarism");

	EncryptionParameters parms(scheme_type::BFV);

	parms.set_poly_modulus_degree(1<<15);  ///taking more time
	parms.set_coeff_modulus(coeff_modulus_128(1<<15)); /// taking more time
	parms.set_plain_modulus(1ll<<20);

	auto context = SEALContext::Create(parms);

	print_parameters(context);

	IntegerEncoder encoder(parms.plain_modulus());

	KeyGenerator keygen(context);
    PublicKey public_key = keygen.public_key();
    SecretKey secret_key = keygen.secret_key();

	Encryptor encryptor(context, public_key);

	Evaluator evaluator(context);

	Decryptor decryptor(context, secret_key);
	Plaintext p = Plaintext("2x^32495 + 2x^32487 + 11x^32480 + 2x^32479 + 1x^32438 + 1x^32423 + 4x^32274 + 1x^32094 + 1x^32031 + 1x^31819 + 5x^31701 + 1x^31641 + 1x^31518 + 1x^31461 + 4x^31433 + 1x^31320 + 26x^31275 + 2x^31178 + 1x^31164 + 1x^31103 + 1x^31075 + 1x^31068 + 3x^30985 + 1x^30929 + 1x^30839 + 1x^30801 + 26x^30719 + 1x^30594 + 1x^30510 + 2x^30426 + 1x^30417 + 4x^30343 + 1x^30330 + 1x^30293 + 1x^30220 + 4x^30183 + 2x^30140 + 4x^30127 + 1x^30052 + 4x^30013 + 2x^30003 + 4x^29912 + 1x^29897 + 1x^29681 + 4x^29668 + 2x^29644 + 6x^29565 + 7x^29550 + 1x^29549 + 1x^29542 + 5x^29491 + 2x^29484 + 2x^29466 + 1x^29421 + 4x^29406 + 4x^29398 + 1x^29123 + 1x^29122 + 8x^29016 + 4x^29003 + 1x^28953 + 1x^28883 + 1x^28867 + 1x^28806 + 1x^28805 + 5x^28575 + 1x^28501 + 13x^28462 + 22x^28451 + 1x^28449 + 1x^28440 + 1x^28425 + 1x^28326 + 2x^28324 + 2x^28320 + 2x^28272 + 1x^28250 + 2x^28225 + 1x^28195 + 2x^28193 + 1x^28129 + 3x^28083 + 1x^27966 + 1x^27817 + 3x^27792 + 2x^27671 + 4x^27666 + 4x^27662 + 3x^27647 + 20x^27572 + 1x^27534 + 2x^27414 + 1x^27381 + 1x^27331 + 2x^27317 + 2x^27310 + 1x^27166 + 1x^27046 + 1x^26926 + 5x^26908 + 1x^26828 + 15x^26739 + 8x^26667 + 2x^26660 + 1x^26659 + 1x^26656 + 1x^26403 + 19x^26291 + 18x^26273 + 1x^26240 + 1x^26193 + 1x^26174 + 1x^26123 + 1x^26073 + 20x^26012 + 1x^26011 + 2x^25890 + 1x^25786 + 1x^25785 + 3x^25600 + 3x^25566 + 1x^25456 + 4x^25453 + 1x^25415 + 1x^25402 + 1x^25388 + 1x^25371 + 5x^25301 + 2x^25272 + 9x^25217 + 1x^25067 + 1x^24912 + 1x^24849 + 2x^24697 + 7x^24541 + 1x^24299 + 4x^24273 + 15x^24262 + 21x^24199 + 1x^24156 + 1x^23950 + 1x^23925 + 2x^23771 + 1x^23754 + 2x^23735 + 1x^23734 + 1x^23726 + 3x^23710 + 3x^23653 + 2x^23648 + 1x^23563 + 1x^23499 + 4x^23429 + 1x^23349 + 2x^23307 + 2x^23254 + 1x^23177 + 4x^23144 + 3x^23129 + 1x^23118 + 1x^23087 + 2x^23031 + 1x^22972 + 1x^22938 + 2x^22861 + 1x^22681 + 1x^22607 + 1x^22569 + 2x^22568 + 1x^22519 + 1x^22502 + 3x^22454 + 6x^22395 + 2x^22339 + 2x^22324 + 1x^22291 + 1x^22267 + 1x^22237 + 3x^22143 + 1x^22099 + 41x^22083 + 14x^22035 + 3x^21925 + 6x^21911 + 38x^21896 + 1x^21852 + 1x^21847 + 1x^21782 + 1x^21746 + 1x^21723 + 3x^21692 + 1x^21680 + 1x^21504 + 2x^21455 + 1x^21453 + 1x^21451 + 1x^21440 + 1x^21388 + 1x^21348 + 1x^21333 + 2x^21331 + 1x^21312 + 8x^21271 + 2x^21234 + 1x^21187 + 5x^21117 + 1x^21068 + 4x^21049 + 2x^21011 + 16x^20912 + 1x^20809 + 1x^20786 + 5x^20749 + 3x^20731 + 1x^20576 + 16x^20564 + 2x^20508 + 2x^20470 + 2x^20444 + 1x^20364 + 1x^20332 + 1x^20328 + 3x^20271 + 3x^20215 + 1x^20141 + 1x^20112 + 1x^20084 + 1x^19787 + 7x^19768 + 1x^19762 + 2x^19653 + 1x^19632 + 2x^19575 + 2x^19534 + 1x^19480 + 1x^19372 + 1x^19348 + 3x^19295 + 2x^19173 + 2x^19143 + 9x^19072 + 4x^19070 + 1x^19000 + 5x^18989 + 1x^18892 + 1x^18878 + 1x^18875 + 2x^18849 + 1x^18814 + 16x^18717 + 1x^18694 + 2x^18629 + 6x^18626 + 1x^18516 + 1x^18447 + 1x^18446 + 1x^18325 + 1x^18308 + 2x^18243 + 3x^18221 + 4x^18216 + 1x^18112 + 2x^18104 + 1x^18058 + 1x^18030 + 12x^18022 + 1x^17956 + 1x^17947 + 6x^17937 + 1x^17741 + 2x^17682 + 3x^17583 + 2x^17577 + 1x^17469 + 3x^17426 + 2x^17394 + 2x^17201 + 4x^17162 + 1x^17119 + 1x^17082 + 1x^17079 + 2x^16973 + 2x^16927 + 2x^16911 + 5x^16724 + 3x^16722 + 1x^16692 + 2x^16660 + 1x^16644 + 1x^16576 + 1x^16534 + 1x^16456 + 1x^16371 + 5x^16359 + 12x^16225 + 8x^16223 + 1x^16192 + 1x^16187 + 1x^15880 + 4x^15862 + 1x^15844 + 6x^15820 + 18x^15724 + 5x^15593 + 1x^15588 + 1x^15519 + 1x^15443 + 4x^15423 + 21x^15417 + 3x^15409 + 2x^15299 + 1x^15292 + 2x^15224 + 5x^15199 + 1x^15164 + 1x^15160 + 1x^15034 + 32x^15010 + 1x^14886 + 1x^14883 + 3x^14811 + 8x^14770 + 5x^14742 + 1x^14682 + 1x^14652 + 1x^14625 + 1x^14619 + 5x^14527 + 7x^14487 + 2x^14484 + 5x^14464 + 1x^14421 + 1x^14303 + 7x^14185 + 1x^14174 + 1x^14145 + 6x^14129 + 10x^14124 + 1x^14065 + 2x^14059 + 3x^14046 + 4x^14017 + 1x^13684 + 1x^13668 + 1x^13643 + 1x^13551 + 10x^13485 + 1x^13443 + 5x^13391 + 1x^13376 + 1x^13342 + 1x^13323 + 2x^13306 + 3x^13292 + 1x^13268 + 1x^13251 + 8x^13238 + 1x^13194 + 2x^13125 + 1x^12913 + 10x^12872 + 1x^12702 + 2x^12685 + 14x^12651 + 1x^12587 + 1x^12559 + 1x^12545 + 1x^12501 + 1x^12426 + 1x^12409 + 1x^12379 + 1x^12329 + 6x^12327 + 4x^12241 + 1x^12226 + 1x^12151 + 2x^12141 + 43x^12101 + 1x^12002 + 4x^11984 + 1x^11915 + 2x^11797 + 1x^11795 + 4x^11763 + 1x^11631 + 2x^11630 + 8x^11611 + 1x^11604 + 22x^11601 + 1x^11576 + 14x^11568 + 3x^11531 + 1x^11466 + 1x^11441 + 1x^11383 + 2x^11324 + 1x^11233 + 38x^11203 + 3x^11198 + 1x^11196 + 15x^11058 + 24x^10718 + 1x^10677 + 2x^10661 + 1x^10646 + 1x^10624 + 1x^10617 + 1x^10614 + 1x^10607 + 5x^10548 + 1x^10494 + 1x^10451 + 2x^10365 + 3x^10317 + 1x^10232 + 1x^10146 + 2x^10044 + 23x^9975 + 1x^9958 + 2x^9870 + 4x^9755 + 2x^9750 + 3x^9649 + 2x^9636 + 6x^9622 + 7x^9601 + 1x^9553 + 1x^9509 + 1x^9475 + 1x^9437 + 1x^9430 + 1x^9420 + 1x^9391 + 2x^9310 + 66x^9189 + 11x^9185 + 1x^9165 + 2x^9133 + 1x^9081 + 1x^9033 + 28x^8884 + 5x^8804 + 1x^8801 + 1x^8765 + 22x^8726 + 6x^8649 + 1x^8601 + 1x^8598 + 1x^8550 + 1x^8547 + 2x^8497 + 1x^8278 + 2x^8272 + 1x^8269 + 3x^8165 + 1x^7979 + 1x^7875 + 1x^7860 + 5x^7840 + 20x^7815 + 1x^7764 + 5x^7735 + 1x^7590 + 7x^7562 + 4x^7513 + 2x^7508 + 2x^7486 + 2x^7261 + 1x^7201 + 1x^7165 + 6x^7145 + 2x^7121 + 1x^7111 + 1x^7086 + 2x^7039 + 5x^6998 + 1x^6985 + 1x^6836 + 1x^6710 + 2x^6609 + 24x^6607 + 1x^6417 + 1x^6328 + 4x^6264 + 1x^6133 + 1x^6125 + 1x^6115 + 6x^6111 + 1x^6101 + 1x^6032 + 2x^6027 + 1x^5972 + 2x^5970 + 3x^5947 + 1x^5918 + 1x^5912 + 2x^5888 + 1x^5846 + 1x^5810 + 1x^5791 + 1x^5789 + 3x^5523 + 3x^5485 + 1x^5453 + 3x^5415 + 4x^5404 + 2x^5400 + 6x^5369 + 6x^5261 + 12x^5117 + 13x^5075 + 1x^5062 + 4x^4957 + 1x^4918 + 1x^4894 + 2x^4619 + 1x^4589 + 1x^4570 + 1x^4547 + 2x^4476 + 1x^4448 + 1x^4230 + 2x^4215 + 3x^4204 + 1x^4146 + 1x^4062 + 2x^3976 + 1x^3946 + 15x^3835 + 1x^3830 + 2x^3773 + 6x^3719 + 1x^3709 + 2x^3656 + 1x^3646 + 1x^3633 + 1x^3616 + 1x^3600 + 2x^3430 + 1x^3365 + 2x^3331 + 24x^3330 + 17x^3232 + 1x^3182 + 1x^3180 + 1x^3170 + 1x^3156 + 1x^2943 + 9x^2903 + 14x^2881 + 20x^2879 + 6x^2866 + 1x^2848 + 10x^2788 + 1x^2783 + 22x^2741 + 1x^2738 + 8x^2725 + 2x^2673 + 1x^2665 + 1x^2652 + 1x^2637 + 3x^2619 + 1x^2581 + 24x^2469 + 2x^2359 + 1x^2258 + 1x^2124 + 1x^1950 + 1x^1949 + 4x^1934 + 1x^1915 + 1x^1897 + 1x^1877 + 1x^1864 + 2x^1861 + 1x^1821 + 1x^1789 + 1x^1756 + 1x^1735 + 1x^1723 + 2x^1653 + 1x^1617 + 1x^1609 + 2x^1568 + 1x^1552 + 2x^1539 + 1x^1480 + 6x^1443 + 2x^1435 + 2x^1413 + 9x^1394 + 12x^1334 + 1x^1329 + 2x^1229 + 1x^1212 + 1x^1198 + 2x^1129 + 2x^1128 + 1x^1083 + 1x^1040 + 3x^1032 + 1x^932 + 3x^931 + 2x^884 + 3x^667 + 5x^637 + 2x^568 + 3x^543 + 1x^507 + 4x^487 + 5x^418 + 1x^343 + 1x^341 + 2x^328 + 2x^269 + 2x^226 + 4x^161 + 7x^156 + 1x^138 + 2x^122 + 1x^31");
	cout<<p.to_string()<<endl;

	///2016 fiji paper:
//	string cloudForward = "2x^32495 + 2x^32487 + 11x^32480 + 2x^32479 + 1x^32438 + 1x^32423 + 4x^32274 + 1x^32094 + 1x^32031 + 1x^31819 + 5x^31701 + 1x^31641 + 1x^31518 + 1x^31461 + 4x^31433 + 1x^31320 + 26x^31275 + 1x^31178 + 1x^31178 + 1x^31164 + 1x^31103 + 1x^31075 + 1x^31068 + 3x^30985 + 1x^30929 + 1x^30839 + 1x^30801 + 26x^30719 + 1x^30594 + 1x^30510 + 2x^30426 + 1x^30417 + 4x^30343 + 1x^30330 + 1x^30293 + 1x^30220 + 4x^30183 + 2x^30140 + 4x^30127 + 1x^30052 + 4x^30013 + 2x^30003 + 4x^29912 + 1x^29897 + 1x^29681 + 4x^29668 + 2x^29644 + 6x^29565 + 7x^29550 + 1x^29549 + 1x^29542 + 5x^29491 + 2x^29484 + 2x^29466 + 1x^29421 + 4x^29406 + 4x^29398 + 1x^29123 + 1x^29122 + 8x^29016 + 4x^29003 + 1x^28953 + 1x^28883 + 1x^28867 + 1x^28806 + 1x^28805 + 5x^28575 + 1x^28501 + 13x^28462 + 22x^28451 + 1x^28449 + 1x^28440 + 1x^28425 + 1x^28326 + 2x^28324 + 2x^28320 + 2x^28272 + 1x^28250 + 2x^28225 + 1x^28195 + 2x^28193 + 1x^28129 + 3x^28083 + 1x^27966 + 1x^27817 + 3x^27792 + 2x^27671 + 4x^27666 + 4x^27662 + 3x^27647 + 20x^27572 + 1x^27534 + 2x^27414 + 1x^27381 + 1x^27331 + 2x^27317 + 2x^27310 + 1x^27166 + 1x^27046 + 1x^26926 + 5x^26908 + 1x^26828 + 15x^26739 + 8x^26667 + 2x^26660 + 1x^26659 + 1x^26656 + 1x^26403 + 19x^26291 + 18x^26273 + 1x^26240 + 1x^26193 + 1x^26174 + 1x^26123 + 1x^26073 + 20x^26012 + 1x^26011 + 2x^25890 + 1x^25786 + 1x^25785 + 3x^25600 + 3x^25566 + 1x^25456 + 4x^25453 + 1x^25415 + 1x^25402 + 1x^25388 + 1x^25371 + 5x^25301 + 2x^25272 + 9x^25217 + 1x^25067 + 1x^24912 + 1x^24849 + 2x^24697 + 7x^24541 + 1x^24299 + 4x^24273 + 15x^24262 + 21x^24199 + 1x^24156 + 1x^23950 + 1x^23925 + 2x^23771 + 1x^23754 + 2x^23735 + 1x^23734 + 1x^23726 + 3x^23710 + 3x^23653 + 2x^23648 + 1x^23563 + 1x^23499 + 4x^23429 + 1x^23349 + 2x^23307 + 2x^23254 + 1x^23177 + 4x^23144 + 3x^23129 + 1x^23118 + 1x^23087 + 2x^23031 + 1x^22972 + 1x^22938 + 2x^22861 + 1x^22681 + 1x^22607 + 1x^22569 + 2x^22568 + 1x^22519 + 1x^22502 + 3x^22454 + 6x^22395 + 2x^22339 + 2x^22324 + 1x^22291 + 1x^22267 + 1x^22237 + 3x^22143 + 1x^22099 + 41x^22083 + 13x^22035 + 1x^22035 + 3x^21925 + 6x^21911 + 38x^21896 + 1x^21852 + 1x^21847 + 1x^21782 + 1x^21746 + 1x^21723 + 3x^21692 + 1x^21680 + 1x^21504 + 2x^21455 + 1x^21453 + 1x^21451 + 1x^21440 + 1x^21388 + 1x^21348 + 1x^21333 + 2x^21331 + 1x^21312 + 8x^21271 + 2x^21234 + 1x^21187 + 5x^21117 + 1x^21068 + 4x^21049 + 2x^21011 + 16x^20912 + 1x^20809 + 1x^20786 + 5x^20749 + 3x^20731 + 1x^20576 + 16x^20564 + 2x^20508 + 2x^20470 + 2x^20444 + 1x^20364 + 1x^20332 + 1x^20328 + 3x^20271 + 3x^20215 + 1x^20141 + 1x^20112 + 1x^20084 + 1x^19787 + 7x^19768 + 1x^19762 + 2x^19653 + 1x^19632 + 2x^19575 + 2x^19534 + 1x^19480 + 1x^19372 + 1x^19348 + 3x^19295 + 2x^19173 + 2x^19143 + 9x^19072 + 4x^19070 + 1x^19000 + 5x^18989 + 1x^18892 + 1x^18878 + 1x^18875 + 2x^18849 + 1x^18814 + 16x^18717 + 1x^18694 + 2x^18629 + 6x^18626 + 1x^18516 + 1x^18447 + 1x^18446 + 1x^18325 + 1x^18308 + 2x^18243 + 3x^18221 + 4x^18216 + 1x^18112 + 2x^18104 + 1x^18058 + 1x^18030 + 12x^18022 + 1x^17956 + 1x^17947 + 6x^17937 + 1x^17741 + 2x^17682 + 3x^17583 + 2x^17577 + 1x^17469 + 3x^17426 + 2x^17394 + 2x^17201 + 4x^17162 + 1x^17119 + 1x^17082 + 1x^17079 + 2x^16973 + 2x^16927 + 2x^16911 + 5x^16724 + 3x^16722 + 1x^16692 + 2x^16660 + 1x^16644 + 1x^16576 + 1x^16534 + 1x^16456 + 1x^16371 + 5x^16359 + 12x^16225 + 8x^16223 + 1x^16192 + 1x^16187 + 1x^15880 + 4x^15862 + 1x^15844 + 6x^15820 + 18x^15724 + 5x^15593 + 1x^15588 + 1x^15519 + 1x^15443 + 4x^15423 + 20x^15417 + 1x^15417 + 3x^15409 + 2x^15299 + 1x^15292 + 2x^15224 + 5x^15199 + 1x^15164 + 1x^15160 + 1x^15034 + 32x^15010 + 1x^14886 + 1x^14883 + 3x^14811 + 8x^14770 + 5x^14742 + 1x^14682 + 1x^14652 + 1x^14625 + 1x^14619 + 5x^14527 + 7x^14487 + 2x^14484 + 5x^14464 + 1x^14421 + 1x^14303 + 6x^14185 + 1x^14185 + 1x^14174 + 1x^14145 + 6x^14129 + 10x^14124 + 1x^14065 + 2x^14059 + 3x^14046 + 4x^14017 + 1x^13684 + 1x^13668 + 1x^13643 + 1x^13551 + 10x^13485 + 1x^13443 + 5x^13391 + 1x^13376 + 1x^13342 + 1x^13323 + 2x^13306 + 3x^13292 + 1x^13268 + 1x^13251 + 8x^13238 + 1x^13194 + 2x^13125 + 1x^12913 + 10x^12872 + 1x^12702 + 2x^12685 + 14x^12651 + 1x^12587 + 1x^12559 + 1x^12545 + 1x^12501 + 1x^12426 + 1x^12409 + 1x^12379 + 1x^12329 + 6x^12327 + 4x^12241 + 1x^12226 + 1x^12151 + 2x^12141 + 43x^12101 + 1x^12002 + 4x^11984 + 1x^11915 + 2x^11797 + 1x^11795 + 4x^11763 + 1x^11631 + 2x^11630 + 8x^11611 + 1x^11604 + 20x^11601 + 2x^11601 + 1x^11576 + 14x^11568 + 3x^11531 + 1x^11466 + 1x^11441 + 1x^11383 + 2x^11324 + 1x^11233 + 38x^11203 + 3x^11198 + 1x^11196 + 15x^11058 + 24x^10718 + 1x^10677 + 2x^10661 + 1x^10646 + 1x^10624 + 1x^10617 + 1x^10614 + 1x^10607 + 5x^10548 + 1x^10494 + 1x^10451 + 2x^10365 + 3x^10317 + 1x^10232 + 1x^10146 + 2x^10044 + 23x^9975 + 1x^9958 + 2x^9870 + 4x^9755 + 2x^9750 + 3x^9649 + 2x^9636 + 6x^9622 + 7x^9601 + 1x^9553 + 1x^9509 + 1x^9475 + 1x^9437 + 1x^9430 + 1x^9420 + 1x^9391 + 2x^9310 + 66x^9189 + 11x^9185 + 1x^9165 + 2x^9133 + 1x^9081 + 1x^9033 + 28x^8884 + 5x^8804 + 1x^8801 + 1x^8765 + 22x^8726 + 6x^8649 + 1x^8601 + 1x^8598 + 1x^8550 + 1x^8547 + 2x^8497 + 1x^8278 + 2x^8272 + 1x^8269 + 3x^8165 + 1x^7979 + 1x^7875 + 1x^7860 + 5x^7840 + 20x^7815 + 1x^7764 + 5x^7735 + 1x^7590 + 7x^7562 + 4x^7513 + 2x^7508 + 2x^7486 + 2x^7261 + 1x^7201 + 1x^7165 + 6x^7145 + 2x^7121 + 1x^7111 + 1x^7086 + 2x^7039 + 5x^6998 + 1x^6985 + 1x^6836 + 1x^6710 + 2x^6609 + 24x^6607 + 1x^6417 + 1x^6328 + 4x^6264 + 1x^6133 + 1x^6125 + 1x^6115 + 6x^6111 + 1x^6101 + 1x^6032 + 2x^6027 + 1x^5972 + 2x^5970 + 3x^5947 + 1x^5918 + 1x^5912 + 2x^5888 + 1x^5846 + 1x^5810 + 1x^5791 + 1x^5789 + 3x^5523 + 3x^5485 + 1x^5453 + 3x^5415 + 4x^5404 + 2x^5400 + 6x^5369 + 5x^5261 + 1x^5261 + 12x^5117 + 13x^5075 + 1x^5062 + 4x^4957 + 1x^4918 + 1x^4894 + 2x^4619 + 1x^4589 + 1x^4570 + 1x^4547 + 2x^4476 + 1x^4448 + 1x^4230 + 2x^4215 + 3x^4204 + 1x^4146 + 1x^4062 + 2x^3976 + 1x^3946 + 15x^3835 + 1x^3830 + 2x^3773 + 6x^3719 + 1x^3709 + 2x^3656 + 1x^3646 + 1x^3633 + 1x^3616 + 1x^3600 + 2x^3430 + 1x^3365 + 2x^3331 + 24x^3330 + 17x^3232 + 1x^3182 + 1x^3180 + 1x^3170 + 1x^3156 + 1x^2943 + 9x^2903 + 14x^2881 + 20x^2879 + 6x^2866 + 1x^2848 + 10x^2788 + 1x^2783 + 22x^2741 + 1x^2738 + 8x^2725 + 2x^2673 + 1x^2665 + 1x^2652 + 1x^2637 + 3x^2619 + 1x^2581 + 24x^2469 + 2x^2359 + 1x^2258 + 1x^2124 + 1x^1950 + 1x^1949 + 4x^1934 + 1x^1915 + 1x^1897 + 1x^1877 + 1x^1864 + 2x^1861 + 1x^1821 + 1x^1789 + 1x^1756 + 1x^1735 + 1x^1723 + 2x^1653 + 1x^1617 + 1x^1609 + 2x^1568 + 1x^1552 + 2x^1539 + 1x^1480 + 6x^1443 + 2x^1435 + 2x^1413 + 9x^1394 + 12x^1334 + 1x^1329 + 2x^1229 + 1x^1212 + 1x^1198 + 2x^1129 + 2x^1128 + 1x^1083 + 1x^1040 + 3x^1032 + 1x^932 + 3x^931 + 2x^884 + 3x^667 + 5x^637 + 2x^568 + 3x^543 + 1x^507 + 4x^487 + 5x^418 + 1x^343 + 1x^341 + 2x^328 + 2x^269 + 2x^226 + 4x^161 + 7x^156 + 1x^138 + 2x^122 + 1x^31";
//	vector<string> cloudForwardSubPolys = ArrayOfSubpoly(cloudForward);
//	vector<Plaintext> cloudForwardSubPlaintext = subpolyes_string_to_plaintext(cloudForwardSubPolys);
//	///2014 fiji paper:
//	string ourReverse = "5x^32578 + 2x^32552 + 4x^32514 + 2x^32506 + 1x^32472 + 2x^32453 + 1x^32390 + 2x^32339 + 1x^32293 + 1x^32191 + 1x^32158 + 2x^32138 + 1x^32122 + 1x^31990 + 1x^31972 + 1x^31905 + 1x^31725 + 1x^31698 + 2x^31677 + 1x^31659 + 1x^31577 + 2x^31565 + 1x^31556 + 2x^31513 + 3x^31480 + 1x^31455 + 1x^31415 + 1x^31399 + 1x^31373 + 17x^31275 + 1x^31115 + 1x^31106 + 1x^31100 + 1x^31092 + 1x^31084 + 1x^31070 + 1x^31041 + 1x^31025 + 2x^30973 + 1x^30827 + 1x^30815 + 1x^30745 + 1x^30736 + 2x^30727 + 1x^30712 + 1x^30691 + 1x^30636 + 2x^30630 + 1x^30605 + 1x^30565 + 1x^30551 + 2x^30501 + 1x^30343 + 1x^30307 + 1x^30302 + 1x^30301 + 1x^30183 + 5x^30072 + 1x^30049 + 1x^30028 + 3x^30009 + 3x^29984 + 1x^29960 + 18x^29944 + 4x^29881 + 5x^29868 + 2x^29826 + 1x^29743 + 4x^29727 + 5x^29662 + 4x^29610 + 2x^29593 + 2x^29453 + 3x^29427 + 1x^29388 + 1x^29387 + 134x^29377 + 1x^29345 + 54x^29279 + 1x^29271 + 6x^29244 + 4x^29119 + 1x^29116 + 2x^29102 + 1x^29092 + 3x^29052 + 2x^29009 + 2x^28956 + 1x^28936 + 1x^28890 + 1x^28887 + 1x^28719 + 9x^28583 + 3x^28502 + 1x^28490 + 5x^28470 + 1x^28438 + 2x^28405 + 1x^28377 + 1x^28194 + 1x^28175 + 1x^28161 + 1x^28112 + 1x^28081 + 1x^28062 + 6x^28058 + 1x^28039 + 1x^27976 + 1x^27950 + 1x^27899 + 2x^27827 + 2x^27701 + 2x^27691 + 2x^27685 + 2x^27676 + 1x^27626 + 1x^27567 + 2x^27534 + 1x^27527 + 1x^27519 + 6x^27492 + 5x^27485 + 1x^27425 + 1x^27402 + 1x^27363 + 2x^27348 + 1x^27348 + 1x^27219 + 4x^27177 + 1x^27160 + 2x^27142 + 2x^27085 + 2x^26853 + 1x^26766 + 1x^26736 + 2x^26685 + 1x^26614 + 6x^26596 + 3x^26582 + 3x^26553 + 2x^26531 + 1x^26509 + 1x^26498 + 3x^26457 + 1x^26423 + 1x^26273 + 1x^26258 + 2x^26075 + 1x^26049 + 1x^26045 + 1x^26035 + 1x^26023 + 1x^26002 + 1x^25945 + 1x^25925 + 1x^25923 + 1x^25919 + 1x^25893 + 1x^25839 + 3x^25829 + 18x^25747 + 3x^25731 + 1x^25696 + 1x^25611 + 2x^25523 + 10x^25498 + 1x^25451 + 1x^25425 + 2x^25399 + 1x^25377 + 1x^25373 + 1x^25347 + 1x^25321 + 1x^25302 + 1x^25295 + 1x^25269 + 1x^25243 + 1x^25217 + 1x^25180 + 5x^25170 + 1x^25170 + 6x^25096 + 1x^25064 + 1x^25060 + 1x^25033 + 1x^24969 + 1x^24905 + 2x^24874 + 1x^24775 + 1x^24749 + 1x^24723 + 2x^24713 + 1x^24682 + 1x^24671 + 1x^24645 + 1x^24620 + 2x^24603 + 1x^24567 + 1x^24541 + 1x^24530 + 1x^24524 + 1x^24504 + 1x^24444 + 1x^24350 + 2x^24322 + 1x^24291 + 1x^24275 + 1x^24099 + 9x^24076 + 1x^24073 + 1x^24047 + 1x^24021 + 1x^24011 + 1x^23995 + 1x^23985 + 1x^23969 + 1x^23943 + 1x^23932 + 38x^23883 + 1x^23863 + 3x^23777 + 2x^23725 + 1x^23712 + 3x^23661 + 1x^23585 + 1x^23575 + 2x^23492 + 1x^23470 + 2x^23420 + 1x^23383 + 1x^23367 + 1x^23364 + 1x^23334 + 1x^23323 + 2x^23287 + 1x^23218 + 1x^23206 + 1x^23189 + 1x^23134 + 1x^23056 + 1x^22960 + 1x^22952 + 7x^22828 + 2x^22744 + 1x^22690 + 1x^22634 + 2x^22537 + 1x^22527 + 1x^22500 + 1x^22449 + 13x^22397 + 1x^22396 + 3x^22395 + 1x^22359 + 2x^22343 + 1x^22177 + 9x^22110 + 2x^22087 + 5x^22077 + 1x^22053 + 1x^22002 + 2x^21996 + 2x^21943 + 1x^21860 + 1x^21852 + 1x^21712 + 1x^21687 + 1x^21673 + 1x^21664 + 25x^21630 + 6x^21551 + 1x^21522 + 2x^21488 + 1x^21485 + 1x^21433 + 1x^21398 + 2x^21376 + 3x^21370 + 8x^21343 + 6x^21316 + 4x^21315 + 8x^21260 + 1x^21224 + 1x^21222 + 1x^21161 + 1x^21078 + 1x^21073 + 18x^21041 + 4x^21037 + 1x^21013 + 18x^21005 + 1x^20974 + 2x^20812 + 1x^20764 + 1x^20548 + 1x^20548 + 1x^20543 + 1x^20379 + 1x^20311 + 6x^20282 + 6x^20240 + 4x^20230 + 1x^20228 + 1x^20222 + 1x^20191 + 1x^20005 + 4x^20000 + 3x^19978 + 1x^19972 + 3x^19970 + 3x^19907 + 1x^19905 + 3x^19821 + 1x^19821 + 1x^19805 + 2x^19787 + 1x^19695 + 3x^19681 + 3x^19624 + 2x^19616 + 5x^19595 + 1x^19587 + 1x^19573 + 1x^19506 + 3x^19444 + 2x^19380 + 127x^19371 + 6x^19317 + 1x^19267 + 3x^19233 + 1x^19214 + 2x^19207 + 2x^19159 + 3x^19124 + 6x^19122 + 1x^18966 + 1x^18960 + 1x^18664 + 1x^18660 + 2x^18610 + 1x^18485 + 5x^18480 + 6x^18424 + 1x^18413 + 1x^18371 + 4x^18227 + 1x^18163 + 1x^18151 + 2x^18125 + 1x^18064 + 1x^18049 + 2x^17957 + 1x^17947 + 2x^17867 + 1x^17803 + 1x^17635 + 1x^17618 + 3x^17608 + 4x^17527 + 8x^17500 + 1x^17372 + 1x^17332 + 3x^17317 + 1x^17250 + 1x^17206 + 8x^17108 + 2x^17067 + 1x^17055 + 1x^17027 + 15x^17016 + 2x^16987 + 1x^16944 + 17x^16885 + 1x^16863 + 1x^16828 + 2x^16753 + 23x^16719 + 3x^16617 + 1x^16529 + 1x^16471 + 1x^16398 + 8x^16384 + 1x^16359 + 2x^16342 + 2x^16261 + 1x^16169 + 2x^16153 + 1x^16121 + 2x^16075 + 2x^16039 + 1x^15992 + 13x^15965 + 1x^15944 + 1x^15833 + 1x^15818 + 1x^15794 + 5x^15713 + 7x^15692 + 1x^15570 + 5x^15535 + 2x^15490 + 1x^15460 + 1x^15403 + 1x^15391 + 1x^15380 + 9x^15215 + 1x^15145 + 3x^15112 + 1x^15108 + 1x^15053 + 1x^15026 + 1x^14971 + 1x^14945 + 8x^14942 + 1x^14927 + 1x^14762 + 2x^14750 + 1x^14747 + 4x^14722 + 3x^14673 + 22x^14672 + 1x^14595 + 1x^14392 + 2x^14381 + 1x^14363 + 3x^14284 + 3x^14180 + 4x^14170 + 1x^14140 + 1x^14119 + 1x^14078 + 2x^14047 + 1x^14011 + 4x^13983 + 1x^13980 + 1x^13972 + 1x^13966 + 2x^13871 + 3x^13795 + 1x^13760 + 1x^13734 + 3x^13662 + 2x^13648 + 1x^13620 + 1x^13597 + 3x^13583 + 25x^13537 + 2x^13517 + 6x^13436 + 2x^13407 + 2x^13394 + 1x^13356 + 2x^13314 + 6x^13237 + 1x^13019 + 3x^12977 + 1x^12950 + 1x^12877 + 1x^12866 + 2x^12841 + 4x^12740 + 5x^12625 + 1x^12618 + 8x^12595 + 1x^12535 + 1x^12468 + 1x^12338 + 1x^12330 + 4x^12271 + 1x^12153 + 2x^12101 + 4x^12033 + 1x^11992 + 1x^11933 + 1x^11899 + 1x^11878 + 12x^11876 + 4x^11860 + 1x^11838 + 2x^11803 + 1x^11699 + 1x^11696 + 1x^11696 + 6x^11572 + 1x^11541 + 1x^11525 + 2x^11521 + 2x^11496 + 2x^11484 + 1x^11422 + 5x^11376 + 2x^11375 + 9x^11342 + 3x^11338 + 1x^11296 + 1x^11232 + 6x^11221 + 1x^11128 + 2x^11105 + 3x^10929 + 3x^10917 + 3x^10855 + 1x^10818 + 2x^10757 + 1x^10648 + 1x^10626 + 1x^10567 + 3x^10507 + 6x^10372 + 3x^10285 + 4x^10232 + 3x^10219 + 2x^10183 + 1x^10108 + 3x^10099 + 10x^10055 + 4x^10041 + 1x^10020 + 3x^10011 + 1x^9989 + 2x^9944 + 1x^9930 + 2x^9891 + 1x^9801 + 1x^9779 + 1x^9763 + 1x^9748 + 1x^9658 + 1x^9658 + 7x^9575 + 1x^9569 + 1x^9565 + 1x^9522 + 2x^9512 + 4x^9465 + 1x^9409 + 3x^9363 + 1x^9314 + 1x^9281 + 3x^9180 + 2x^9116 + 1x^9101 + 1x^9049 + 1x^8971 + 1x^8961 + 15x^8922 + 1x^8894 + 1x^8879 + 6x^8878 + 1x^8874 + 2x^8847 + 1x^8738 + 8x^8717 + 1x^8649 + 1x^8503 + 2x^8473 + 2x^8454 + 1x^8438 + 6x^8436 + 2x^8433 + 6x^8410 + 3x^8347 + 1x^8332 + 1x^8282 + 1x^8173 + 2x^8068 + 1x^8032 + 12x^7960 + 2x^7938 + 1x^7912 + 3x^7863 + 1x^7780 + 6x^7760 + 7x^7758 + 1x^7631 + 1x^7616 + 1x^7570 + 1x^7472 + 1x^7378 + 1x^7337 + 1x^7308 + 1x^7297 + 1x^7290 + 1x^7277 + 1x^7268 + 8x^7242 + 1x^7191 + 1x^7142 + 3x^7009 + 1x^6976 + 1x^6863 + 1x^6848 + 1x^6839 + 3x^6808 + 1x^6740 + 1x^6729 + 1x^6634 + 6x^6597 + 1x^6512 + 1x^6497 + 1x^6492 + 2x^6435 + 1x^6416 + 1x^6369 + 1x^6347 + 1x^6334 + 1x^6323 + 1x^6243 + 3x^6206 + 1x^6188 + 1x^6184 + 2x^6172 + 1x^6168 + 1x^6132 + 1x^6104 + 2x^5987 + 1x^5958 + 11x^5954 + 2x^5950 + 1x^5906 + 1x^5898 + 2x^5785 + 8x^5734 + 1x^5701 + 1x^5537 + 2x^5522 + 2x^5483 + 1x^5426 + 1x^5425 + 3x^5363 + 2x^5228 + 1x^5227 + 1x^5219 + 1x^5213 + 4x^5180 + 2x^5155 + 1x^5115 + 1x^5070 + 16x^5037 + 1x^5029 + 2x^5024 + 1x^4899 + 1x^4891 + 51x^4887 + 2x^4867 + 11x^4817 + 6x^4803 + 2x^4778 + 1x^4666 + 2x^4650 + 1x^4592 + 1x^4577 + 1x^4453 + 3x^4416 + 1x^4384 + 2x^4370 + 1x^4350 + 2x^4322 + 4x^4289 + 5x^4285 + 2x^4283 + 1x^4241 + 1x^4171 + 1x^4169 + 2x^4147 + 1x^4120 + 1x^4096 + 2x^3900 + 9x^3803 + 1x^3688 + 3x^3667 + 3x^3656 + 2x^3642 + 3x^3606 + 5x^3593 + 1x^3591 + 1x^3583 + 1x^3540 + 1x^3519 + 2x^3486 + 1x^3481 + 1x^3470 + 2x^3444 + 1x^3418 + 4x^3392 + 1x^3314 + 1x^3288 + 1x^3281 + 2x^3280 + 1x^3262 + 10x^3212 + 7x^3203 + 1x^3188 + 1x^3139 + 1x^3132 + 15x^3125 + 14x^3118 + 2x^3043 + 1x^2987 + 1x^2978 + 3x^2941 + 1x^2887 + 13x^2861 + 2x^2837 + 1x^2819 + 2x^2712 + 1x^2653 + 1x^2609 + 10x^2596 + 1x^2566 + 49x^2410 + 1x^2404 + 2x^2389 + 9x^2360 + 1x^2323 + 1x^2316 + 6x^2262 + 1x^2259 + 1x^2194 + 2x^2188 + 1x^2144 + 17x^2119 + 3x^2076 + 1x^1932 + 1x^1911 + 2x^1902 + 3x^1856 + 1x^1808 + 1x^1534 + 2x^1532 + 1x^1442 + 3x^1288 + 1x^1200 + 1x^1196 + 2x^1183 + 1x^1111 + 1x^1085 + 1x^956 + 1x^923 + 1x^908 + 1x^901 + 1x^705 + 3x^693 + 3x^639 + 1x^525 + 2x^400 + 1x^385 + 20x^354 + 14x^335 + 1x^324 + 1x^306 + 5x^277 + 2x^260 + 6x^130 + 3x^127";
//	vector<string> ourReverseSubPolys = ArrayOfSubpoly(ourReverse);
	///vector<Plaintext> ourReverseSubPlaintext = subpolyes_string_to_plaintext(cloudForwardSubPolys);

	///for(int i=0; i<ourReverseSubPlaintext.size(); i++) cout<<ourReverseSubPlaintext[i].to_string()<<endl;

	//clock();
//	cout<< ourReversePlaintext.to_string()<<endl;
//	cout<< cloudForwardPlaintext.to_string()<<endl;
//
//	Ciphertext cloudForwardCiphertext, ourReverseCiphertext;
//    cout << "Encrypting ourReversePlaintext: ";
//    encryptor.encrypt(ourReversePlaintext, ourReverseCiphertext);
//    cout << "Done" << endl;
//
//	cout << "Encrypting cloudForwardPlaintext: ";
//    encryptor.encrypt(cloudForwardPlaintext, cloudForwardCiphertext);
//    cout << "Done (ourForwardPlaintext)" << endl;
//
//
//	///cosine similarity checking:
//	cout<< "Calculaion (our reverse * cloud forward): ";
//	evaluator.multiply_inplace(ourReverseCiphertext, cloudForwardCiphertext); // A.B
//	cout<<"(done)"<<endl;
//
//	///Result Decreaption:
//	Plaintext abPlaintext;
//    cout << "Decrypting result (our reverse * cloud forward): ";
//    decryptor.decrypt(ourReverseCiphertext, abPlaintext);
//    cout << "Done" << endl;
//
//	///Result:
//	int AB = CoefficientforDocument(abPlaintext.to_string());
//	int AA = 55735, BB = 30431;
//	cout <<"Coefficient of abPlaintext: "<< AB <<endl;
//	cout<<AB<<" "<<AA<<" "<<BB<<endl;
//	cout<<"CosX = "<< (AB*1.0) / (1.0 * (AA+BB-AB)) <<endl;
	return 0;
}
